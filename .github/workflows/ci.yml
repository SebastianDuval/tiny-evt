name: CI

on:
  push:
    branches: [ master ]

jobs:
  setup:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15]
    steps:
      - name: Install Node.js and NPM
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: deps-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm install

      - name: Cache workspace
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}
          key: workspace-${{ github.sha }}

  unit-test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Restore workspace
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}
          key: workspace-${{ github.sha }}

      - name: Copy env file
        uses: canastro/copy-file-action@master
        with:
          source: "configs/.env-cmdrc.json"
          target: ".env-cmdrc.json"

      - name: Test Vue components
        run: npm run vtu
  
  build-app:
    runs-on: ${{ matrix.os }}
    needs: setup
    strategy:
      matrix:
        os: [macos-10.15]
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Restore workspace
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}
          key: workspace-${{ github.sha }}

      - name: Add global esbuild command
        run: npm install --global esbuild vite
  
      - name: Build script
        run: esbuild --platform=node --bundle --external:vite --external:esbuild --external:electron-builder scripts/app-builder.ts --outfile=build/app-builder.js

      - name: Build app
        env:
          BUILD_ENV: 'gh-action'
        run: cat scripts/args.esbuild.app-builder | xargs esbuild && node build/app-builder.js
  
